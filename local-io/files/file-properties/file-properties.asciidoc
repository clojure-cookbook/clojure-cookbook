==== File properties

// By Stefan Karlsson (zclj)

===== Problem

You need to find properties of a file.

===== Solution

Clojure do not have any library functions to get the properties of a file. So what should you do then? Well since Clojure's interoperability with Java is superb, you can use the properties defined in +java.io.File+.

[source,clojure]
----
(def my-file (clojure.java.io/file "./my-test-file.txt"))

(.exists my-file)
;; -> true

(.isFile my-file)
;; -> true

(.isDirectory my-file)
;; -> false

(.getName my-file)
;; -> "my-test-file.txt"

(.getParent my-file)
;; -> "."

(.getPath my-file)
;; -> "./my-test-file.txt"

(.getAbsolutePath my-file)
"/home/the-user/cookbook/./my-test-file.txt"
----

===== Discussion
To make the properties that you are interested in more conveniently available, you can create a map from them. You do this by making a function that given a path to a file, creates a file object and then add the properties of interest to an idiomatic looking Clojure map.

[source,clojure]
----
(defn get-file-properties-from [file-path]
  (let [file (clojure.java.io/file file-path)]
    {:file file
     :exists? (.exists file)
     :is-file? (.isFile file)
     :is-directory? (.isDirectory file)}))

(get-file-properties-from "./my-test-file.txt")
;; -> {:file #<File ./my-test-file.txt>, 
;;     :exists? true, 
;;     :is-file? true, 
;;     :is-directory? false}
----

With this function at hand you can define a function that, given a path to a directory, return a lazy-seq of the file properties maps.

[source,clojure]
----
(defn directory-contents-properties-of [path]
  (let [files (file-seq (clojure.java.io/file path))]
    (map get-file-properties-from files)))
----

This will enable you to do some nice compositions. For example, to get the maps of all files in a directory, you can combine the previously defined function with a filter.
[source,clojure]
----
(filter :is-file? (directory-contents-properties-of "./my-directory"))
----

You can take this one step further by defining a closure, that closes over the property to filter by.
[source,clojure]
----
(defn by-property [property]
  (fn [path]
    (filter property (directory-contents-properties-of path))))
----
This closure will return a function, that as its argument takes a directory path, and will apply the filter to the file properties of that directory.

With the closure defined you can define any convenience functions that fit into your scenario. For example, defining a function to get all the files that have the +:is-file?+ property set to true.
[source,clojure]
----
(def get-files-from (by-property :is-file?))

(get-files-from "./my-directory")
----

===== See Also
* See the Java documentation for http://doc.java.sun.com/DocWeb/api/java.io.File[java.io.File] for more available properties on files.

* <<sec_local-io_files_get_files_from_dir>> for more details on using a +file-seq+ to get the files from a directory.