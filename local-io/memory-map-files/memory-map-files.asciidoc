=== Memory map a file

////
Author: Alan Busby @thebusby
////

===== Problem

You want to memory-map a file.

===== Solution

Use the +clj-mmap+ library, https://github.com/thebusby/clj-mmap

Import the library.

[source,clojure]
----
(ns io-with-clj-mmap
  (:require [clj-mmap :as mmap]))
----

Read the first and last N bytes of a text file.

[source,clojure]
----
(with-open [file (mmap/get-mmap "/path/to/file/file.txt")]
  (let [n-bytes       10
        file-size     (.size file)        
        first-n-bytes (mmap/get-bytes file 0 n-bytes)
        last-n-bytes  (mmap/get-bytes file (- file-size n-bytes) n-bytes)]
    [(String. first-n-bytes "UTF-8")
     (String. last-n-bytes  "UTF-8")]))
----

Overwrite the first N bytes of a text file.

[source,clojure]
----
(with-open [file (mmap/get-mmap "/path/to/file/file.txt")]
  (let [bytes-to-write (.getBytes "New text goes here" "UTF-8")
        file-size      (.size file)]
    (if (> file-size
           (alength bytes-to-write))
      (mmap/put-bytes file bytes-to-write 0))))
----

===== Discussion

While Clojure makes it simple to work with Java's NIO primitives directly,
NIO makes working with files larger than 2GB especially difficult. clj-mmap 
wraps this nastiness, but at the same time doesn't expose all the features 
that NIO does.

Memory mapped files are especially useful when working with large files, 
structured binary data, or text files where Java's String overhead may be
unwelcome.
