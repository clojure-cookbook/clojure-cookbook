==== Adding additional clojure library jars for quick experimentation without leiningen or maven project

// By Rohit Sachdeva (rsachdeva)

===== Problem

You need to quickly run and try additional clojure library jars without creating a leiningen or maven project.

===== Solution

Obtain the jar file by downloading it from
http://clojars.org/repo or search from http://mvnrepository.com/.
Put it in the same directory you have the clojure jar file.
Refer bare-bones recipe for clojure jar download.

For example we will take the tools trace library. Search for "tools.trace" in the http://mvnrepository.com/.
You will get Search Results: tools.trace with the link for tools.trace. 

[source,clojure]
----
java -cp "clojure-1.5.1.jar:tools.trace-0.7.5.jar" clojure.main

user=> (use 'clojure.tools.trace)

user=> (trace (+ 2 2))
;; TRACE: 4
;; 4

----

===== Discussion
----
-cp "clojure-1.5.1.jar:tools.trace-0.7.5.jar"
----

This sets the Java classpath to include Clojure and also the tools trace library jar allowing us to use functions like trace directly in repl. This also shows that leningen project file inclusion in general is not creating magic- essentially gets the jar file in the same way we manually got and adjusts the classpath accordingly.

Another thing these tools like leiningen do is dependency management. Suppose the trace function calls a function included in another jar. You will get error that the function cannot be found. In that case you would have to add additional jars in the same way to the classpath.

Getting the library from clojars or mvnrepository can be a bit of a hassle but this shows we are in the end when adding libraries we are just adding another jar.

===== See Also

* Java command line

* Leiningen