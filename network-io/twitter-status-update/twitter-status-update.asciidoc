==== Using the Twitter API 
// By Tobias Bayer (codebrickie)

===== Problem

You want to connect to Twitter and use its API.

===== Solution

There is a wrapper for the Twitter API based on http.async.client.

Include the wrapper in your project file:

.project.clj
[source,clojure]
----
(defproject twitter "1.0.0-SNAPSHOT"
              :dependencies [[twitter-api "0.7.4"]])
----

This recipe assumes you have already retrieved an OAuth consumer key and secret for your app from Twitter and an access token and secret for the user.
SEE RECIPE XYZ ON HOW TO RETRIEVE AN ACCESS TOKEN VIA OAUTH.

Define your keys and secrets and send the status update request to Twitter:

[source,clojure]
----
(use '[twitter.oauth] '[twitter.api.restful])

(def credentials (make-oauth-creds
                   "Hux2MTu8gObgzbqNCpPZ2K" ; consumer key
                   "hg4GsABTR3asRRjQGtpnHEhkQGaw0JETG3B7lEbd9M" ; consumer secret
                   "18407745-cbJHihjBIE0ak6CrQ29631gfwPzm9AhekpGNYtOY4" ; access token
                   "mncHyc4g1MGKDHMbI2rrhktRTlgLDXmIG2k1800yIY")) ; access token secret

(statuses-update :oauth-creds credentials :params {:status "Hi there, I am sending this tweet from Clojure!"})
;; -> {:status {:code 200, :msg "OK",...
----
	

===== Discussion

Twitter-api offers more than just sending status updates.
The structure of function calls basically remains the same. Twitter-api functions take the credentials and request parameters as arguments.

For example, you can show user details with ++users-show++:

[source,clojure]
----
(users-show :oauth-creds credentials :params {:screen-name "Alan_M_Turing"})
;; -> ...:id 40514394, :profile_background_image_url_https "https://si0.twimg.com/images/themes/theme1/bg.png", :description "Without being overly modest, you can read this because of me.", :profile_text_color "333333", :screen_name "Alan_M_Turing"...
----

===== See Also
See the https://github.com/adamwynne/twitter-api[twitter-api documentation] for more details.
