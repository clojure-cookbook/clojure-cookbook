==== Using the Twitter API 
// By Tobias Bayer (codebrickie)

===== Problem

You want to connect to Twitter and use its API.

===== Solution

There is a wrapper for the Twitter API based on http.async.client.

Include the wrapper in your project file:

.project.clj
[source,clojure]
----
(defproject twitter "1.0.0-SNAPSHOT"
              :dependencies [[twitter-api "0.7.4"]])
----

This recipe assumes you have already retrieved an OAuth footnote:[See the Twitter documentation on how to receive OAuth credentials at https://dev.twitter.com/docs/auth/obtaining-access-tokens] consumer key and secret for your app from Twitter and an access token and secret for the user. Make sure your app has read/write access in order to post status updates.

Define your keys and secrets and send the status update request to Twitter:

[source,clojure]
----
(use 'twitter.oauth)
(use 'twitter.api.restful)

(def credentials (make-oauth-creds
                   "Hux2MTu8gObgzbqNCpPZ2K" ; consumer key
                   "hg4GsABTR3asRRjQGtpnHEhkQGaw0JETG3B7lEbd9M" ; consumer secret
                   "18407745-cbJHihjBIE0ak6CrQ29631gfwPzm9AhekpGNYtOY4" ; access token
                   "mncHyc4g1MGKDHMbI2rrhktRTlgLDXmIG2k1800yIY")) ; access token secret

(statuses-update :oauth-creds credentials :params {:status "Hi there, I am sending this tweet from Clojure!"})
;; -> {:status {:code 200, :msg "OK",...
----
	

===== Discussion

++twitter-api++ offers more than just sending status updates.
The structure of function calls basically remains the same. ++twitter-api++ functions take the credentials and request parameters as arguments.

For example, you can show user details with ++users-show++:

[source,clojure]
----
(users-show :oauth-creds credentials :params {:screen-name "Alan_M_Turing"})
;; -> ...:id 40514394, :profile_background_image_url_https "https://si0.twimg.com/images/themes/theme1/bg.png", :description "Without being overly modest, you can read this because of me.", :profile_text_color "333333", :screen_name "Alan_M_Turing"...
----

Using Twitter's streaming feature for reading a user's timeline is also possible.
First you should define a callback function that will be called later every time a new tweet is received:

[source,clojure]
----
(use 'twitter.api.streaming) 
(use 'twitter.callbacks) 
(use 'twitter.callbacks.handlers)

(import '(twitter.callbacks.protocols AsyncStreamingCallback))

(def ^:dynamic *print-status-callback* 
  (AsyncStreamingCallback. #(println %2) nil nil))
----

This function simply prints the raw output stream to the console.
Now request the user stream and provide your callback:

[source,clojure]
----
(user-stream :oauth-creds credentials :callbacks *print-status-callback*)
;; -> #<ByteArrayOutputStream {"created_at":"Mon Jul 15 08:08:45 +0000 2013","id":356686762585755648,"id_str":"356686762585755648","text":"Morning everyone."...
----

===== See Also
See the https://github.com/adamwynne/twitter-api[twitter-api documentation] for more details.
